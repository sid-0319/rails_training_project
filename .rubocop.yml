# .rubocop.yml

AllCops:
  Exclude:
    - 'bin/**/*'
    - 'db/schema.rb'
    - 'db/queue_schema.rb'

Metrics/MethodLength:
  Exclude:
    - 'lib/build/database_builder.rb'

Layout/LineLength:
  IgnoredPatterns:
    - '^\s*#'

# This file configures RuboCop rules for your Ruby project.
# Each rule below includes a brief comment describing its purpose.

 # Ensures assignments are properly indented for readability.
Layout/AssignmentIndentation:
  Enabled: true

  # Checks that comments are aligned with the surrounding code.
Layout/CommentIndentation:
  Enabled: true

  # Checks for multiple consecutive blank lines.
Layout/EmptyLines:
  Enabled: true

# Requires an empty line between method definitions for clarity.
Layout/EmptyLineBetweenDefs:
  Enabled: true

  # Ensures consistent indentation of the first element in a hash.
Layout/FirstHashElementIndentation:
  Enabled: true
  EnforcedStyle: consistent

  # Checks for consistent indentation (normal vs. special indentation).
Layout/IndentationConsistency:
  Enabled: true
  EnforcedStyle: normal

  # Enforces use of spaces or tabs for indentation.
Layout/IndentationStyle:
  Enabled: true

  # Sets the number of spaces used for indentation.
Layout/IndentationWidth:
  Enabled: true
  Width: 2

  # Ensures rescue/ensure keywords are aligned with their begin blocks.
Layout/RescueEnsureAlignment:
  Enabled: true

  # Checks for space between block parameters and the pipes.
Layout/SpaceAroundBlockParameters:
  Enabled: true

  # Requires a space before the opening brace in block.
Layout/SpaceBeforeBlockBraces:
  Enabled: true

  # Requires spaces inside block braces.
Layout/SpaceInsideBlockBraces:
  Enabled: true

  # Checks for spaces inside hash literal braces.
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

  # Ensures method calls with arguments use parentheses.
Lint/RequireParentheses:
  Enabled: true

  # Disallows trailing whitespace on lines.
Layout/TrailingWhitespace:
  Enabled: true

  # Enforces use of ASCII-only characters in identifiers.
Naming/AsciiIdentifiers:
  Enabled: true

  # Enforces CamelCase for class and module names.
Naming/ClassAndModuleCamelCase:
  Enabled: true

  # Enforces snake_case for file names.
Naming/FileName:
  Enabled: true

  # Enforces snake_case for method names.
Naming/MethodName:
  Enabled: true

  # Enforces use of `?` suffix for predicate method names.
Naming/PredicateName:
  Enabled: true

  # Enforces snake_case for variable names.
Naming/VariableName:
  Enabled: true

  # Enforces use of `&&` and `||` over `and`/`or`.
Style/AndOr:
  Enabled: true

  # Enforces use of `{}` for single-line and `do..end` for multi-line blocks.
Style/BlockDelimiters:
  Enabled: true

  # Enforces modern hash syntax (e.g., `key: value` instead of `:key => value`).
Style/HashSyntax:
  Enabled: true

  # Checks for proper use of numeric separators for readability.
Style/NumericLiterals:
  Enabled: true
