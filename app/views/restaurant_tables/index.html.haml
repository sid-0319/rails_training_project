%head
  %link{rel: "stylesheet", href: "https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css"}
  %link{rel: "stylesheet", href: "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"}
  %style
    :css
      @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Playfair+Display:wght@700&display=swap');
      body { background-color: #f8f9fa; font-family: 'Montserrat', sans-serif; }
      .tables-container { max-width: 1400px; margin: 40px auto; padding: 40px; background-color: #fff; border-radius: 15px; box-shadow: 0 5px 25px rgba(0,0,0,0.05); position: relative; }
      .page-header { font-family: 'Playfair Display', serif; font-size: 2.5rem; color: #2c3e50; margin-bottom: 2rem; text-align: center; }
      .horizontal-scroll-wrapper { overflow-x: auto; white-space: nowrap; padding: 1rem 0; -webkit-overflow-scrolling: touch; display: flex; align-items: center; gap: 15px; }
      .table-block { display: inline-block; width: 200px; height: 150px; border: 2px solid #e9ecef; border-radius: 15px; padding: 15px; position: relative; background-color: #fff; box-shadow: 0 5px 15px rgba(0,0,0,0.05); transition: transform 0.2s ease, box-shadow 0.2s ease; flex-shrink: 0; }
      .table-block:hover { transform: translateY(-5px); box-shadow: 0 8px 20px rgba(0,0,0,0.1); }
      .table-number { font-family: 'Playfair Display', serif; font-size: 2rem; font-weight: 700; line-height: 1; margin-bottom: 0.25rem; color: #343a40; }
      .table-details { font-size: 0.8rem; color: #6c757d; margin-top: 0.25rem; }
      .table-status-tag { position: absolute; top: 15px; right: 15px; font-weight: 700; padding: 0.2rem 0.6rem; border-radius: 20px; font-size: 0.7rem; color: #fff; text-transform: uppercase; }
      .bg-available { background-color: #28a745; }
      .bg-reserved { background-color: #ffc107; }
      .bg-occupied { background-color: #dc3545; }
      .table-actions { position: absolute; bottom: 15px; right: 15px; display: flex; gap: 5px; }
      .modal-header, .modal-footer { border: none; }
      .modal-header .btn-close { font-size: 0.8rem; }
      .modal-title { font-family: 'Playfair Display', serif; font-weight: 700; }
      .pagination { display: flex !important; list-style: none !important; padding-left: 0 !important; border-radius: 0.375rem !important; gap: 0.5rem !important; margin-top: 20px !important; flex-wrap: wrap !important; justify-content: center !important; }
      .pagination a, .pagination span { color: #0d6efd !important; padding: 0.375rem 0.75rem !important; border: 1px solid #dee2e6 !important; border-radius: 0.375rem !important; text-decoration: none !important; cursor: pointer !important; min-width: 2.5rem !important; text-align: center !important; display: inline-block !important; transition: all 0.15s ease-in-out !important; }
      .pagination a:hover { background-color: #e9f5ff !important; border-color: #0d6efd !important; }
      .pagination .active span { background-color: #0d6efd !important; border-color: #0d6efd !important; color: white !important; cursor: default !important; }
      .pagination .disabled span { color: #6c757d !important; cursor: default !important; }

%div.container.tables-container
  %h2.page-header Tables for #{@restaurant.name}
  
  - if current_user.staff?
    .d-flex.justify-content-between.align-items-center.mb-4.flex-wrap.gap-3
      = form_with url: restaurant_restaurant_tables_path(@restaurant), method: :get, local: true, class: "d-flex align-items-center gap-2" do |f|
        %label{ for: "status", class: "form-label mb-0 fw-bold" } Filter by Status:
        = f.select :status, options_for_select([["All", ""], ["Available", "available"], ["Reserved", "reserved"], ["Occupied", "occupied"]], @status_filter), {}, class: "form-select w-auto"
        = f.submit "Filter", class: "btn btn-primary btn-sm"
      = button_tag "Add Table", type: :button, class: "btn btn-success btn-sm", data: { bs_toggle: "modal", bs_target: "#addTableModal" }

  - if @tables.any?
    .horizontal-scroll-wrapper
      - @tables.each do |table|
        - if current_user.staff? || table.status == "available"
          - status_class = "bg-#{table.status}"
          %div.table-block
            %span.table-status-tag{class: status_class}= table.status.humanize
            %h3.table-number= table.table_number
            %p.table-details
              %i.fas.fa-chair
              = table.seats
              Seats
            .table-actions
              - if current_user.staff?
                = button_tag type: "button", class: "btn btn-sm btn-warning", data: { bs_toggle: "modal", bs_target: "#editTableModal-#{table.id}" } do
                  %i.fas.fa-edit
                = button_to restaurant_restaurant_table_path(@restaurant, table), method: :delete, data: { confirm: "Are you sure you want to delete this table?" }, class: "btn btn-sm btn-danger" do
                  %i.fas.fa-trash
                = link_to restaurant_restaurant_table_reservations_for_table_path(@restaurant, table), class: "btn btn-sm btn-info" do
                  %i.fas.fa-calendar-check
              - else
                = link_to "Reserve Table", new_restaurant_reservation_path(@restaurant, restaurant_table_id: table.id), class: "btn btn-sm btn-primary"
  - else
    .alert.alert-info.text-center.mt-5
      %i.fas.fa-info-circle.me-2
      - if current_user.staff?
        No tables found for the selected filter.
      - else
        No available tables found at this time.

  .d-flex.justify-content-center.mt-4
    = will_paginate @tables, params: { sort: params[:sort], status: params[:status] }

- if current_user.staff?
  - if @tables.any?
    - @tables.each do |table|
      .modal.fade{id: "editTableModal-#{table.id}", tabindex: "-1", aria: { labelledby: "editTableModalLabel-#{table.id}", hidden: "true" } }
        .modal-dialog
          .modal-content
            .modal-header
              %h5.modal-title{id: "editTableModalLabel-#{table.id}"} Edit Table ##{table.table_number}
              %button.btn-close{ type: "button", data: { bs_dismiss: "modal" }, aria: { label: "Close" } }
            = form_with model: [@restaurant, table], url: restaurant_restaurant_table_path(@restaurant, table), method: :patch, local: true do |f|
              .modal-body
                .mb-3
                  = f.label :table_number, "Table Number", class: "form-label"
                  = f.text_field :table_number, class: "form-control", required: true
                .mb-3
                  = f.label :seats, "Seats", class: "form-label"
                  = f.number_field :seats, class: "form-control", required: true
                .mb-3
                  = f.label :status, "Status", class: "form-label"
                  = f.select :status, RestaurantTable.statuses.keys.map { |s| [s.humanize, s] }, {}, class: "form-select", required: true
              .modal-footer
                %button.btn.btn-secondary{ type: "button", data: { bs_dismiss: "modal" } } Close
                = f.submit "Update Table", class: "btn btn-primary"

  .modal.fade{ id: "addTableModal", tabindex: "-1", aria: { labelledby: "addTableModalLabel", hidden: "true" } }
    .modal-dialog
      .modal-content
        .modal-header
          %h5.modal-title#addTableModalLabel Add New Table
          %button.btn-close{ type: "button", data: { bs_dismiss: "modal" }, aria: { label: "Close" } }
        = form_with model: [@restaurant, @restaurant.restaurant_tables.new], url: restaurant_restaurant_tables_path(@restaurant), local: false do |f|
          .modal-body
            - if @table && @table.errors.any?
              .alert.alert-danger#error_explanation
                %h6.mb-2
                  = "#{pluralize(@table.errors.count, "error")} prohibited this table from being saved:"
                %ul.mb-0
                  - @table.errors.full_messages.each do |msg|
                    %li= msg
            .mb-3
              = f.label :table_number, "Table Number", class: "form-label"
              = f.text_field :table_number, class: "form-control", required: true
            .mb-3
              = f.label :seats, "Seats", class: "form-label"
              = f.number_field :seats, class: "form-control", required: true
            .mb-3
              = f.label :status, "Status", class: "form-label"
              = f.select :status, RestaurantTable.statuses.keys.map { |s| [s.humanize, s] }, {}, class: "form-select", required: true
          .modal-footer
            %button.btn.btn-secondary{ type: "button", data: { bs_dismiss: "modal" } } Close
            = f.submit "Create Table", class: "btn btn-primary"

- if @table && @table.errors.any?
  :javascript
    document.addEventListener("DOMContentLoaded", function() {
      var modalEl = document.getElementById("addTableModal");
      if (modalEl) {
        var modal = new bootstrap.Modal(modalEl);
        modal.show();
      }
    });
